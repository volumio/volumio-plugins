#brutefir config for volumio - other variable to be added later for setting (filter lenght, float_bits output etc)
    sampling_rate: 44100;
    filter_length: ${filter_size},${num_part};
    overflow_warnings: true;
    float_bits: ${float_bits};
    convolver_config: "~/.brutefir_convolver"; # location of convolver config file
logic:
 "cli" { port: 3002;},
"eq"  {
	{
                coeff: "equalizer","dblbuf";
                #bands: "ISO octave";
		bands: 31, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16000;
                magnitude:  31/0.0, 63/0.0, 125/0.0, 250/0.0, 500/0.0, 1000/0.0, 2000/0.0, 4000/0.0, 8000/0.0, 16000/0.0;
        };
};
#
coeff "equalizer" {
        filename: "dirac pulse";
        shared_mem: true;
        blocks: 4;
};

coeff "dblbuf" {
filename: "dirac pulse";
shared_mem: true;
blocks: 4;
};

input "l_in", "r_in" {
            device: "alsa" {device: "hw:Loopback,1";};
            sample: "S32_LE";   # sample format
            channels: 2;            # number of open channels / which to use
    };


# Add equalizer
filter "eq_l" {
from_inputs: "l_in";
#to_outputs: "l_drc";
to_filters: "l_drc";
process: -1; # process index to run in (-1 means auto)
coeff: "equalizer";
delay: 0; # predelay, in blocks
crossfade: false; # crossfade when coefficient is changed
};

filter "eq_r" {
from_inputs: "r_in";
#to_outputs: "r_drc";
to_filters: "r_drc";
process: -1; # process index to run in (-1 means auto)
coeff: "equalizer";
delay: 0; # predelay, in blocks
crossfade: false; # crossfade when coefficient is changed
}; 

coeff "filter_1" {
filename: "${leftfilter}";
format: "FLOAT64_LE";
};

filter "l_drc" {
from_filters: "eq_l";
to_outputs: "l_out"/0.0;
coeff: "filter_1";
process: -1;
};

coeff "filter_2" {
filename: "${rightfilter}";
format: "FLOAT64_LE";
};

filter "r_drc" {
from_filters: "eq_r";
to_outputs: "r_out"/0.0;
coeff: "filter_2";
process: -1;
};

   output "l_out", "r_out" {
            device: "alsa" {device: "hw:2,0";};
#         device: "file" {path: "/dev/stdout";};
            sample: "S32_LE";   # sample format
            channels: 2;        # number of open channels / which to use
    };
