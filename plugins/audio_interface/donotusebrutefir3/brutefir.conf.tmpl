#-----------------------
#brutefir config for volumio - b@lbuze 2020
#-----------------------
#This file is used as a template to generate the configuration file of brutefir in the plugin
#-----------------------

    sampling_rate: ${smpl_rate};
    filter_length: ${filter_size},${numb_part}; # number of taps N,number of partition P = N*P= filter length
    overflow_warnings: true;
    show_progress: false;
    monitor_rate: true;        # monitor sample rate
    sdf_length: -1;             # subsample filter half length in samples
    lock_memory: true;          # try to lock memory if realtime prio is set
    float_bits: 64;
    powersave: true;
    convolver_config: "/data/configuration/audio_interface/brutefir/brutefir_convolver"; # location of convolver config file

    logic:
      "cli" { port: 3002;};

	#"echo": true;

#-----------------------
#Input configuration
#-----------------------

input "l_in", "r_in" {
            device: "alsa" {device: "plughw:${input_device}"; link: false;};
            sample: "s32_le";   # sample format
            channels: 2;            # number of open channels / which to use
delay: ${delay};
    };

#-----------------------
#room correction filters
#-----------------------


#---------left channel

#first set of coeff
coeff "l_out" {filename: "${leftfilter}";format: "${filter_format1}";${skip_1}};

#second set of coefficient for left
${enableswap}coeff "2l_out" {filename: "${sndleftfilter}";format: "${filter_format1}";${skip_1}};

#--------------------

filter "l_out" {from_filters: "lVoBAF";to_outputs: "l_out"/${lattenuation};coeff: "l_out";process: -1;};

#---------right channel

#first set of coef
coeff "r_out" {filename: "${rightfilter}";format: "${filter_format2}";${skip_2}};

#second set of coefficients for right
${enableswap}coeff "2r_out" {filename: "${sndrightfilter}";format: "${filter_format2}";${skip_2}};

#------------------

filter "r_out" {from_filters: "rVoBAF";to_outputs: "r_out"/${rattenuation};coeff: "r_out";process: -1;};


#-------------
#Multichannels section
#-------------

${enablefc2} coeff "l_c2_out" {filename: "${leftc2filter}";format: "${filter_format1}";${skip_c2} attenuation: ${attenuationlr2};};
${enablefc2} filter "l_c2_out" {from_filters: "lVoBAF";to_outputs: "l_c2_out"/0.0;coeff: "l_c2_out";process: -1;};


${enablefc3} coeff "r_c2_out" {filename: "${rightc2filter}";format: "${filter_format1}";${skip_c2} attenuation: ${attenuationlr2};};
${enablefc3} filter "r_c2_out" {from_filters: "rVoBAF";to_outputs: "r_c2_out"/0.0;coeff: "r_c2_out";process: -1;};


${enablefc4} coeff "l_c3_out" {filename: "${leftc3filter}";format: "${filter_format1}";${skip_c2} attenuation: ${attenuationlr3};};
${enablefc4} filter "l_c3_out" {from_filters: "lVoBAF";to_outputs: "l_c3_out"/0.0;coeff: "l_c3_out";process: -1;};


${enablefc5} coeff "r_c3_out" {filename: "${rightc3filter}";format: "${filter_format1}";${skip_c2} attenuation: ${attenuationlr3};};
${enablefc5} filter "r_c3_out" {from_filters: "rVoBAF";to_outputs: "r_c3_out"/0.0;coeff: "r_c3_out";process: -1;};


${enablefc6} coeff "l_c4_out" {filename: "${leftc4filter}";format: "${filter_format1}";${skip_c2} attenuation: ${attenuationlr4};};
${enablefc6} filter "l_c4_out" {from_filters: "lVoBAF";to_outputs: "l_c4_out"/0.0;coeff: "l_c4_out";process: -1;};

${enablefc7} coeff "r_c4_out" {filename: "${rightc4filter}";format: "${filter_format1}";${skip_c2} attenuation: ${attenuationlr4};};
${enablefc7} filter "r_c4_out" {from_filters: "rVoBAF";to_outputs: "r_c4_out"/0.0;coeff: "r_c4_out";process: -1;};


#-------------
#VoBAF filters
#-------------

#--------left

coeff "lLow" {
filename: "${leftfilter}";
format: "${filter_format1}";
${skip_1}
attenuation: ${lattenuation};
};

coeff "lLM1" {
filename: "${leftfilter}";
format: "${filter_format1}";
${skip_1}
attenuation: ${lattenuation};
};

coeff "lLM2" {
filename: "${leftfilter}";
format: "${filter_format1}";
${skip_1}
attenuation: ${lattenuation};
};

coeff "lLM3" {
filename: "${leftfilter}";
format: "${filter_format1}";
${skip_1}
attenuation: ${lattenuation};
};

coeff "lM" {
filename: "${leftfilter}";
format: "${filter_format1}";
${skip_1}
attenuation: ${lattenuation};
};

coeff "lHM" {
filename: "${leftfilter}";
format: "${filter_format1}";
${skip_1}
attenuation: ${lattenuation};
};

coeff "lHigh" {
filename: "${leftfilter}";
format: "${filter_format1}";
${skip_1}
attenuation: ${lattenuation};
};

filter "lVoBAF" {
#from_filters: "l_drc";
from_inputs: "l_in";
#to_outputs: "l_out"/0.0;
to_filters: "${tolfilters}";
coeff: "lM";
process: -1;
};

#-------------right

coeff "rLow" {
filename: "${rightfilter}";
format: "${filter_format2}";
${skip_2}
attenuation: ${rattenuation};
};

coeff "rLM1" {
filename: "${rightfilter}";
format: "${filter_format2}";
${skip_2}
attenuation: ${rattenuation};
};

coeff "rLM2" {
filename: "${rightfilter}";
format: "${filter_format2}";
${skip_2}
attenuation: ${rattenuation};
};

coeff "rLM3" {
filename: "${rightfilter}";
format: "${filter_format2}";
${skip_2}
attenuation: ${rattenuation};
};

coeff "rM" {
filename: "${rightfilter}";
format: "${filter_format2}";
${skip_2}
attenuation: ${rattenuation};
};

coeff "rHM" {
filename: "${rightfilter}";
format: "${filter_format2}";
${skip_2}
attenuation: ${rattenuation};
};

coeff "rHigh" {
filename: "${rightfilter}";
format: "${filter_format2}";
${skip_2}
attenuation: ${rattenuation};
};

filter "rVoBAF" {
#from_filters: "r_drc";
from_inputs: "r_in";
#to_outputs: "r_out"/0.0;
to_filters: "${torfilters}";
coeff: "rM";
#delay: 0,5;
process: -1;
};

#-----------------
#Output configuration
#-----------------

output "l_out","r_out"${enablec2}{
#device: "alsa" {device: "${output_device}"; ignore_xrun: true; };
device: "alsa" {device: "fromDsp"; ignore_xrun: true; link: false; };
sample: "S32_LE";#"${output_format}";   # sample format
${nchannels}       # number of open channels / which to use
${tdelay}; #delay for each channel if set in the plugin
dither: false;
};

#------------------
#end of configuration
#------------------
