{
	"PYDPIPER":
	{
	"PYDPIPERCONF":"PydPiper Configuration",
		"CONNECTIONSETTINGS":"Configure LCD connection settings",
		"D_CONNECTIONSETTINGS":"The below settings will control how the PydPiper service will try to connect to your display module. At this moment the following displays and types of connections are supported: HD44780 (standard, WEG and WEH) over both parallel and I2C connections, SSD1306 over I2C only.",
			"PARALLEL":"Enable parallel connection (disables IIC (I2C))",		
			"D_PARALLEL":"If set to ON parallel connection is used, else IIC (I2C) is used.",
			"DRIVER":"Select driver",
			"D_DRIVER":"Select the appropriate driver for your screen. <BR />hd44780 is used for standard line displays (8x1, 16x1, 16x2, 20x4 etc) using a parallel connection <BR />hd44780_i2c is used for standard line displays (8x1, 16x1, 16x2, 20x4 etc) using a iic (i2c) connection <BR />ssd1306_i2c is used for SSD1306-type displays, only iic (i2c) communication is supported at this moment <BR />winstar_weg is used for the Winstar 16x2 OLED screens (WEG and WEH)",
			"WIDTH":"Width (in lines)",
			"D_WIDTH":"The width of the display in pixel lines, for standard issue line displays usually 5 lines per character field or column (16 = 80, 20 = 100 etc.)",
			"DD_WIDTH":"Usually a multitude of 5",
			"HEIGHT":"Height (in lines)",
			"D_HEIGHT":"The height of the display in pixel lines, for standard issue line displays usually 8 lines per character field or row (1 = 8, 2 = 16, 4 = 32 etc.)",
			"DD_HEIGHT":"Usually a multitude of 8",
			"E":"Pin E(N) (enable)",
			"DD_E":"Default = 8 | RaspDac = 8",
			"RS":"Pin RS (register select)",
			"DD_RS":"Default = 7 | RaspDac = 7",
			"D4":"Pin D4 (data bit 4)",
			"DD_D4":"Default = 25 | RaspDac = 25",
			"D5":"Pin D5 (data bit 5)",
			"DD_D5":"Default = 24 | RaspDac = 24",
			"D6":"Pin D6 (data bit 6)",
			"DD_D6":"Default = 23 | RaspDac = 23",
			"D7":"Pin D7 (data bit 7)",
			"DD_D7":"Default = 18 | RaspDac = 27",
			"GPIO_PIN":"The GPIO pin to which this LCD pin connects on the Raspberry Pi. Standard config is: <BR />D7=18<BR />D6=23<BR />D5=24<BR />D4=25<BR />EN=8<BR />EN2=22<BR />RS=7<BR />BL=8",
			"I2CADDRESS":"IIC (I2C) address",
			"D_I2CADDRESS":"You can query the used port by using the command 'sudo i2cdetect -y 1' (note: the last character is the number one)",
			"DD_I2CADDRESS":"Default = 0x27",
			"I2CPORT":"IIC (I2C) port",
			"D_I2CPORT":"If your device supports multiple iic ports, make sure you select the correct one, for single board computers it's mostly just 1 (one).",
			"DD_I2CPORT":"Default = 1",
		"OUTPUTSETTINGS":"Configure output settings",
		"OUTPUTSETTINGS":"The below settings will control the information shown on the display.",
			"TIMEZONE":"Timezone",
			"D_TIMEZONE":"Select the appropriate timezone from the drop down list.",
			"TIMEFORMAT":"Time format",
			"D_TIMEFORMAT":"Select the appropriate time format from the drop down list.",
			"DD_TIMEFORMAT":"NOTE: 24H requires the local directory mount point",
			"UNITS":"Units",
			"D_UNITS":"This will transform the weather data into the correct units format.",
			"USE_WEATHER":"Enable weather info",
			"D_USE_WEATHER":"En- or disables the weather information on the idle (clock) screen.",
			"WAPI":"Weather Underground API key",
			"D_WAPI":"Request your API key at: https://www.wunderground.com/weather/api/",
			"WLOCALE":"Location to pull the weather for",
			"D_WLOCALE":"General format is Zipcode, State/City, Country/City, or Latitude,Longitude (e.g. '20001', 'CA/San_Francisco', 'France/Paris', '37.77,-122.39').",
			"MOUNT_POINT":"Mount point",
			"D_MOUNT_POINT":"Use docker for standard operation, if you're keen on modifying the pages, use the local variant and update the correct pages_file in /home/volumio/pydPiper",
			"PAGES_FILE":"Pages file",
			"D_PAGES_FILE":"Fill in the name of the pages file (within the pydPiper directory) you want to use. <BR /><BR />For standard HD44780 you can use: pages_lcd_{WIDTH IN COLUMNS}x{HEIGHT IN ROWS}.py (e.g. pages_lcd_16x2.py) <BR /><BR />For the Winstar OLED line display you can use: pages_weh_80x16.py (pages_weg_100x16.py for WEG type displays) <BR /><BR />For the SSD type displays you can use: pages_ssd1306.py",
	"SAVE": "Save"
	}
}
